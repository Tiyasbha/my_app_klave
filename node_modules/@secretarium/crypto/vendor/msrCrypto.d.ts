declare namespace _default {
    export const subtle: {
        encrypt: (algorithm: any, keyHandle: any, buffer: any, ...args: any[]) => Promise<any>;
        decrypt: (algorithm: any, keyHandle: any, buffer: any, ...args: any[]) => Promise<any>;
        sign: (algorithm: any, keyHandle: any, buffer: any, ...args: any[]) => Promise<any>;
        verify: (algorithm: any, keyHandle: any, signature: any, buffer: any, ...args: any[]) => Promise<any>;
        digest: (algorithm: any, buffer: any, ...args: any[]) => Promise<any>;
        generateKey: (algorithm: any, extractable: any, keyUsage: any, ...args: any[]) => Promise<any>;
        deriveKey: (algorithm: any, baseKey: any, derivedKeyType: any, extractable: any, keyUsage: any) => Promise<any>;
        deriveBits: (algorithm: any, baseKey: any, length: any, ...args: any[]) => Promise<any>;
        importKey: (format: any, keyData: any, algorithm: any, extractable: any, keyUsage: any, ...args: any[]) => Promise<any>;
        exportKey: (format: any, keyHandle: any) => Promise<any>;
        wrapKey: (format: any, key: any, wrappingKey: any, wrappingKeyAlgorithm: any) => Promise<any>;
        unwrapKey: (format: any, wrappedKey: any, unwrappingKey: any, unwrapAlgorithm: any, unwrappedKeyAlgorithm: any, extractable: any, keyUsages: any) => Promise<any>;
    } | null;
    export function getRandomValues(array: any): any;
    export function initPrng(entropyData: any): void;
    export function toBase64(data: any, base64Url: any): string;
    export function fromBase64(base64String: any): number[];
    export function textToBytes(text: any): any[];
    export function bytesToText(byteArray: any): string;
    export { asn1 };
    export { scriptUrl as url };
    export { msrCryptoVersion as version };
    export function useWebWorkers(useWebWorkers: any): any;
}
export default _default;
declare namespace asn1 {
    export { parse };
    export { encode };
    export function toString(objTree: any): string;
}
declare var scriptUrl: string | null;
declare var msrCryptoVersion: string;
declare function parse(bytes: any, force: any): {} | null;
declare function encode(asn1tree: any): void;
